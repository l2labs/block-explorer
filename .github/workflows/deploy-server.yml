name: deploy

on:
  workflow_call:
    inputs:
      MODE:
        required: true
        type: string
      DATA_FETCH_PORT:
        required: false
        type: string
        default: '3040'
      WORKER_PORT:
        required: false
        type: string
        default: '3001'
      API_PORT:
        required: false
        type: string
        default: '3020'
      API_METRICS_PORT:
        required: false
        type: string
        default: '3005'
      REMOTE_HOST:
        required: true
        type: string
      REMOTE_PORT:
        required: false
        type: string
        default: '22'
      TARGET_PATH:
        required: false
        type: string
        default: '/data/www/'
      BLOCKCHAIN_RPC_URL:
        required: true
        type: string
      CONTRACT_VERIFICATION_API_URL:
        required: true
        type: string
      NAME:
        required: true
        type: string
      DATABASE_HOST:
        required: false
        type: string
        default: 'localhost'
      DATABASE_USER:
        required: false
        type: string
        default: 'postgres'
      DATABASE_PASSWORD:
        required: false
        type: string
        default: 'postgres'
      DATABASE_NAME:
        required: false
        type: string
        default: 'block-explorer'
    secrets:
      SSH_DEPLOY_KEY:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build
        run: APP_MODE=${{ inputs.MODE }} NAME=${{ inputs.NAME }}  npm run build

      - name: Copy dist to server
        uses: easingthemes/ssh-deploy@v4.1.8
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
          ARGS: '-avzr --delete'
          REMOTE_HOST: ${{ inputs.REMOTE_HOST }}
          REMOTE_USER: root
          REMOTE_PORT: ${{ inputs.REMOTE_PORT }}
          TARGET: ${{ inputs.TARGET_PATH }}${{ inputs.NAME }}

      - name: Start
        uses: appleboy/ssh-action@v1.0.0
        env:
          NAME: ${{ inputs.NAME }}
          DATA_FETCH_PORT: ${{ inputs.DATA_FETCH_PORT }}
          WORKER_PORT: ${{ inputs.WORKER_PORT }}
          MODE: ${{ inputs.MODE }}
          BLOCKCHAIN_RPC_URL: ${{ inputs.BLOCKCHAIN_RPC_URL }}
          API_PORT: ${{ inputs.API_PORT }}
          API_METRICS_PORT: ${{ inputs.API_METRICS_PORT }}
          DATABASE_HOST: ${{ inputs.DATABASE_HOST }}
          DATABASE_USER: ${{ inputs.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ inputs.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ inputs.DATABASE_NAME }}
          CONTRACT_VERIFICATION_API_URL: ${{ inputs.CONTRACT_VERIFICATION_API_URL }}
        with:
          host: ${{ inputs.REMOTE_HOST }}
          port: ${{ inputs.REMOTE_PORT }}
          username: root
          key: ${{ secrets.SSH_DEPLOY_KEY }}
          envs: NAME,DATA_FETCH_PORT,WORKER_PORT,MODE,BLOCKCHAIN_RPC_URL,API_PORT,API_METRICS_PORT,DATABASE_HOST,DATABASE_USER,DATABASE_PASSWORD,DATABASE_NAME,CONTRACT_VERIFICATION_API_URL
          script: |
            cd ${{ inputs.TARGET_PATH }}${{ inputs.NAME }}
            pm2 start data-fetcher.config.js
            pm2 start worker.config.js
            pm2 start api.config.js
